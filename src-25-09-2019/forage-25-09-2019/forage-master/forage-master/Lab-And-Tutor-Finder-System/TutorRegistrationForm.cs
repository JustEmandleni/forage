using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;
using System.Data.OleDb;

namespace Lab_And_Tutor_Finder_System
{
    /// <summary>
    /// Project: Forage
    /// Programmer: Emandleni Moyo s216673380@mandela.ac.za
    /// Programmer: Lavhelesani Maphwe  s217055443@mandela.ac.za
    /// Date: 2019/07/11
    /// Date: 2019/09/19
    /// Date: 2019/09/25
    /// Description: This class defines the behavior of the tutor registration form.
    /// </summary>
    /// 

    public partial class TutorRegistrationForm : Form
    {
        //SqlConnection connection = new SqlConnection(@"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\Users\Admin\Documents\WRR301.mdf;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=True;ApplicationIntent=ReadWrite;MultiSubnetFailover=False");
        OleDbConnection connection = new OleDbConnection();
        OleDbDataAdapter dataAdapter;
        DataSet dataSet;

        public TutorRegistrationForm()
        {
            InitializeComponent();

            //connection.ConnectionString = @"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\Wande\Documents\WRR\Forage.accdb;Persist Security Info=False;";

            connection.ConnectionString = @"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\Admin\Desktop\Forage-20-09-2019\Forage.accdb; Persist Security Info=False;";
        }

        private void Form3_Load(object sender, EventArgs e)
        {
            qualificationComboBox.SelectedIndex = 0;

            if (connection.State == ConnectionState.Closed)
                connection.Open();

            string query = "SELECT * FROM TUTOR";
            dataAdapter = new OleDbDataAdapter(query, connection);
            dataSet = new DataSet();
            dataAdapter.Fill(dataSet, "TUTOR");
            connection.Close();
        }

       
        private void nextButtonClick_(object sender, EventArgs e)
        {

            if (matchingPassword())
            {
                perfomRegistration();
                Hide();
                SelectModulesForm SMF = new SelectModulesForm();
                SMF.Show();
            }
            else
            {
                MessageBox.Show("Passwords Do Not Match", "Re-enter Password", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                passwordTextBox.Clear();
                retypePasswordTextBox.Clear();
            }
            
        }

        private void perfomRegistration()
        {
            if (connection.State == ConnectionState.Closed)
                connection.Open();

            if (!isExisting(userNameTextBox.Text, connection))
            {
                dataSet.Tables[0].Rows.Add(userNameTextBox.Text, passwordTextBox.Text, firstNameTextBox.Text, lastNameTextBox.Text, int.Parse(qualificationComboBox.SelectedIndex.ToString()), 0, numericUpDown1.Value, "EMPTY", null, null, null);

                connection.Close();

                //MessageBox.Show("Successfully registered " + firstNameTextBox.Text + "!", "Complete", //MessageBoxButtons.OK, MessageBoxIcon.Information);
                Hide();
                //new TutorDashboardForm().Show();
            }
            else
            {
                //If the user has an existing account 
                MessageBox.Show("We already know you here " + firstNameTextBox.Text + "! Rather log in.", "Account already exists", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private bool isExisting(string str1, OleDbConnection connection)
        {
            string selectQuery = "SELECT * FROM Tutor WHERE tutorUsername = '" + str1 + "'";
            //Gets hold of the result set generated by the SQL query
            dataAdapter = new OleDbDataAdapter(selectQuery, connection);
            DataTable dataTable = new DataTable();
            dataAdapter.Fill(dataTable);

            //Iterates through the result set, if there is a row matching
            if (dataTable.Rows.Count > 0)
                return true;
            else return false;
        }

        
        private void cancelButton_Click(object sender, EventArgs e)
        {
            this.Hide();
            new LoginForm().Show();
        }

        private bool matchingPassword()
        {
            if (passwordTextBox.Text.Equals(retypePasswordTextBox.Text))
                return true;
            else return false;
        }

    }
}
